{
	"info": {
		"_postman_id": "apartment-booking-api",
		"name": "Apartment Booking API",
		"description": "Complete API collection for the Apartment Booking System with authentication, apartment management, and booking functionality.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{jwt_token}}",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8080",
			"type": "string"
		},
		{
			"key": "jwt_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "user_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "apartment_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "booking_id",
			"value": "",
			"type": "string"
		}
	],
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('user_id', response.userId);",
									"    pm.test('User registered successfully', function () {",
									"        pm.expect(response.message).to.eql('User registered');",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test User\",\n    \"email\": \"test@example.com\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"register"
							]
						}
					}
				},
				{
					"name": "Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('jwt_token', response.token);",
									"    pm.test('Login successful', function () {",
									"        pm.expect(response.message).to.eql('Authenticated');",
									"        pm.expect(response.token).to.be.a('string');",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"test@example.com\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					}
				}
			]
		},
		{
			"name": "Apartments",
			"item": [
				{
					"name": "Get All Apartments",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/apartments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"apartments"
							]
						}
					}
				},
				{
					"name": "Get Apartment by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.test('Apartment retrieved successfully', function () {",
									"        pm.expect(response).to.have.property('_id');",
									"        pm.expect(response).to.have.property('title');",
									"        pm.expect(response).to.have.property('location');",
									"        pm.expect(response).to.have.property('pricePerNight');",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/apartments/{{apartment_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"apartments",
								"{{apartment_id}}"
							]
						}
					}
				},
				{
					"name": "Create Apartment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('apartment_id', response._id);",
									"    pm.test('Apartment created successfully', function () {",
									"        pm.expect(response).to.have.property('_id');",
									"        pm.expect(response.title).to.eql('Test Apartment');",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Test Apartment\",\n    \"location\": \"Athens, Greece\",\n    \"pricePerNight\": 75,\n    \"description\": \"Beautiful apartment in the heart of Athens\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/apartments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"apartments"
							]
						}
					}
				},
				{
					"name": "Update Apartment",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Updated Test Apartment\",\n    \"location\": \"Athens, Greece\",\n    \"pricePerNight\": 85,\n    \"description\": \"Updated beautiful apartment in the heart of Athens\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/apartments/{{apartment_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"apartments",
								"{{apartment_id}}"
							]
						}
					}
				},
				{
					"name": "Delete Apartment",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/apartments/{{apartment_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"apartments",
								"{{apartment_id}}"
							]
						}
					}
				}
			]
		},
		{
			"name": "Bookings",
			"item": [
				{
					"name": "Create Booking",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('booking_id', response._id);",
									"    pm.test('Booking created successfully', function () {",
									"        pm.expect(response).to.have.property('_id');",
									"        pm.expect(response.status).to.eql('confirmed');",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"apartmentId\": \"{{apartment_id}}\",\n    \"startDate\": \"2024-12-01\",\n    \"endDate\": \"2024-12-05\",\n    \"totalPrice\": 300\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/bookings",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"bookings"
							]
						}
					}
				},
				{
					"name": "Get My Bookings",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/bookings/my",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"bookings",
								"my"
							]
						}
					}
				},
				{
					"name": "Get All Bookings (Admin)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/bookings",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"bookings"
							]
						}
					}
				},
				{
					"name": "Cancel Booking",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/bookings/{{booking_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"bookings",
								"{{booking_id}}"
							]
						}
					}
				}
			]
		},
		{
			"name": "Health Check",
			"item": [
				{
					"name": "Health Check",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Health check successful', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.have.property('dbState');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/health",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"health"
							]
						}
					}
				}
			]
		}
	]
}
